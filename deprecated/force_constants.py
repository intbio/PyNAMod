#!/usr/bin/env python
import numpy as np
#from prody import *
#import cStringIO

def get_matr(triangle):
            """
            creates 6x6 diagonal matrix from upper triangle given in array
            aranged by rows e.g. 
            11 12 13 14 15 16 22 23 24 25 26 33 34 35 36 44 45 46 55 56 66
            """
            k=0
            matrix=np.zeros((6,6))
            arr=np.array(triangle)
            for i in range(6):
                matrix[i,i:6]=arr[k:k-i+6]
                k+=6-i
            result = np.triu(matrix,1).transpose() + matrix
            return result					

def get_consts():
    #                               Shift   Slide   Rise    Tilt    Roll    Twist
    AVERAGE={	'CG':	np.array([	0.00,	0.41,	3.39,	0.0,	5.4,	36.1]),
                'CC':	np.array([	0.05,	-0.22,	3.42,	-0.1,	3.6,	32.9]),
                'CA':	np.array([	0.09,	0.53,	3.33,	0.5,	4.7,	37.3]),
            	'CT':	np.array([	-0.28,	0.09,	3.37,	-1.5,	1.9,	36.3]),
                'TA':	np.array([	0.00,	0.05,	3.42,	0.0,	3.3,	37.8]),
                'TC':	np.array([	0.09,	-0.25,	3.34,	-1.7,	4.5,	31.9]),
                'TT':	np.array([	-0.03,	-0.08,	3.27,	-1.4,	0.7,	35.1]),
                'TG':	np.array([	0.13,	-0.58,	3.36,	-0.1,	0.7,	31.5]),
                'AG':	np.array([	0.09,	-0.25,	3.34,	-1.7,	4.5,	31.9]),
                'AT':	np.array([	0.00,	-0.59,	3.31,	0.0,	1.1,	29.3]),
                'AC':	np.array([	0.13,	-0.58,	3.36,	-0.1,	0.7,	31.5]),	        
                'AA':	np.array([	-0.03,	-0.08,	3.27,	-1.4,	0.7,	35.1]),
            	'GA':	np.array([	-0.28,	0.09,	3.37,	-1.5,	1.9,	36.3]),
                'GG':	np.array([	0.05,	-0.22,	3.42,	-0.1,	3.6,	32.9]),
                'GT':	np.array([	0.09,	0.53,	3.33,	0.5,	4.7,	37.3]),
                'GC':	np.array([	0.00,	-0.38,	3.40,	0.0,	0.3,	33.6])}
                
                
    #Shift-Shift,Shift-Slide,Shift-Rise,Shift-Tilt,Shift-Roll,Shift-Twist,Slide-Slide,Slide-Rise,Slide-Tilt,Slide-Roll,Slide-Twist,Rise -Rise,Rise-Tilt,Rise-Roll,Rise-Twist,Tilt -Tilt,Tilt -Roll,Tilt-Twist,Roll -Roll,Roll-Twist,Twist-Twist
    FORCE_CONST={'CG': get_matr([   1.586,	0.000,	0.000,	-0.137,  0.000,	 0.000,	 3.301,	 0.191,	 0.000,	 0.005,	 0.056,	14.164,	 0.000,	-0.020,	-0.162,	0.068,	0.000,	0.000,	0.050,	0.024,	0.047]),
                'CA': get_matr([	3.733,	0.871,	1.747,	-0.037,  0.018,	-0.087,	 2.395,	 2.369,	 0.062,	 0.082,	-0.183,	18.235,	 0.189,	 0.004,	-0.321,	0.082, -0.001, -0.016,	0.048,	0.007,	0.043]),
                'GT': get_matr([	3.733,	0.871,	1.747,	-0.037,  0.018,	-0.087,	 2.395,	 2.369,	 0.062,	 0.082,	-0.183,	18.235,	 0.189,	 0.004,	-0.321,	0.082, -0.001, -0.016,	0.048,	0.007,	0.043]),
                'TA': get_matr([	 3.86,	0.000,  0.000, 	-0.176,  0.000,  0.000,	 2.350,	 0.234,	 0.000,  0.061,	-0.067,	21.914,	 0.000, -0.102,	-0.500,	0.148,	0.000,  0.000, 	0.029,	0.013,	0.052]),
                'AG': get_matr([	3.205,	1.380,	2.580,	-0.282,  0.003,	 0.164,	 7.187,	 4.501,	-0.124,	 0.100,  0.102,	29.496,	-1.044,	-0.018,	-0.147,	0.149,	0.026,	0.005,	0.096,	0.015,	0.064]),
                'TC': get_matr([	3.205,	1.380,	2.580,	-0.282,  0.003,	 0.164,	 7.187,	 4.501,	-0.124,	 0.100,  0.102,	29.496,	-1.044,	-0.018,	-0.147,	0.149,	0.026,	0.005,	0.096,	0.015,	0.064]),
                'GG': get_matr([	2.425,	0.309,	1.563,	-0.227,  0.119,	 0.040,	 3.542,	 5.423,	-0.160,	 0.143,	-0.061,	30.312,	-0.851,	 0.427,	-0.196,	0.119, -0.003, -0.008,	0.064, -0.001,	0.041]),
                'CC': get_matr([	2.425,	0.309,	1.563,	-0.227,  0.119,	 0.040,	 3.542,	 5.423,	-0.160,	 0.143,	-0.061,	30.312,	-0.851,	 0.427,	-0.196,	0.119, -0.003, -0.008,	0.064, -0.001,	0.041]),
                'AA': get_matr([	3.978,	1.559,	1.868,	-0.149,  0.017,	 0.175,	 6.160,	 1.330,	-0.098,	-0.137,	 0.022,	21.748,	-0.288,	 0.087,	 0.072,	0.100, -0.001,	0.001,	0.049,	0.031,	0.092]),
                'TT': get_matr([	3.978,	1.559,	1.868,	-0.149,  0.017,	 0.175,	 6.160,	 1.330,	-0.098,	-0.137,	 0.022,	21.748,	-0.288,  0.087,	 0.072,	0.100, -0.001,	0.001,	0.049,	0.031,	0.092]),
                'GA': get_matr([	6.542,	1.750,	0.148,	-0.132,	-0.009,	 0.087,	 2.780,	-0.270,	 0.068,	-0.050,	-0.069,	22.820,	-0.502,	 0.362,	-0.408,	0.087, -0.010,	0.000, 	0.046,	0.011,	0.071]),
                'CT': get_matr([	6.542,	1.750,	0.148,	-0.132,	-0.009,	 0.087,	 2.780,	-0.270,	 0.068,	-0.050,	-0.069,	22.820,	-0.502,	 0.362,	-0.408,	0.087, -0.010,	0.000,  0.046,	0.011,	0.071]),
                'AT': get_matr([	3.172,	0.000,  0.000, 	-0.151,  0.000,  0.000,	10.694,	 0.487,	 0.000, -0.060,	-0.090,	25.547,	 0.000,	-0.030,	-0.409,	0.166,	0.000,  0.000,  0.055,	0.029,	0.070]),
                'AC': get_matr([	2.944, -0.102, -0.412,	-0.033,	-0.041,	-0.044,  6.366,	 2.510,	-0.010,	 0.049,	-0.048,	23.860,	 0.396,	 0.245,	-0.276,	0.111,	0.014,	0.004,	0.080,	0.027,	0.073]),
                'TG': get_matr([	2.944, -0.102, -0.412,	-0.033,	-0.041,	-0.044,	 6.366,	 2.510,	-0.010,	 0.049,	-0.048,	23.860,	 0.396,	 0.245,	-0.276,	0.111,	0.014,	0.004,	0.080,	0.027,	0.073]),
                'GC': get_matr([	 3.35,	0.000, 	0.000, 	-0.236,	 0.000,  0.000,  6.244,  6.804,	 0.000,  0.412,	-0.159,	25.860,	 0.000,  0.630,	-0.239,	0.082,	0.000, 	0.000,  0.082,	0.005,	0.055])}

			
								
    #                          Shift   Slide   Rise    Tilt    Roll    Twist								
    DISP={	'CG':	np.array([	0.87,	0.56,	0.27,	4.2,	5.2,	5.5]),
            'CA':	np.array([	0.55,	0.89,	0.26,	3.7,	5.1,	6.5]),
            'CC':	np.array([	0.76,	0.64,	0.24,	3.7,	4.5,	5.2]),
            'CT':	np.array([	0.46,	0.70,	0.26,	3.8,	5.3,	4.4]),
            'TA':	np.array([	0.52,	0.71,	0.24,	2.7,	6.6,	5.5]),
            'TC':	np.array([	0.69,	0.41,	0.23,	3.3,	3.4,	4.5]),
            'TT':	np.array([	0.57,	0.45,	0.22,	3.3,	5.4,	3.9]),
            'TG':	np.array([	0.59,	0.41,	0.23,	3.1,	3.9,	4.2]),
            'AG':	np.array([	0.69,	0.41,	0.23,	3.3,	3.4,	4.5]),	    
            'AA':	np.array([	0.57,	0.45,	0.22,	3.3,	5.4,	3.9]),	    
            'AT':	np.array([	0.57,	0.31,	0.21,	2.5,	4.9,	4.5]),
            'AC':	np.array([	0.59,	0.41,	0.23,	3.1,	3.9,	4.2]),
            'GG':	np.array([	0.76,	0.64,	0.24,	3.7,	4.5,	5.2]),
            'GT':	np.array([	0.55,	0.89,	0.26,	3.7,	5.1,	6.5]),
            'GA':	np.array([	0.46,	0.70,	0.26,	3.8,	5.3,	4.4]),	    
            'GC':	np.array([	0.61,	0.56,	0.24,	3.9,	4.6,	4.7])}
    return AVERAGE,FORCE_CONST,DISP
            
'''    cy3=parsePDBStream(cStringIO.StringIO("""CRYST1    0.000    0.000    0.000  90.00  90.00  90.00 P 1           1
ATOM      1  C5'     X   1      68.700  78.038  79.112  0.00  0.00           C
ATOM      2  C4'     X   1      69.511  79.046  78.321  0.00  0.00           C
ATOM      3  O4'     X   1      70.934  78.735  78.319  0.00  0.00           O
ATOM      4  C3'     X   1      69.158  79.168  76.839  0.00  0.00           C
ATOM      5  C2'     X   1      70.237  78.360  76.117  0.00  0.00           C
ATOM      6  C1'     X   1      71.407  78.813  76.983  0.00  0.00           C
ATOM      7  COM     X   1      82.545  71.069  78.421  0.00  0.00           C
END"""))

    cy5=parsePDBStream(cStringIO.StringIO("""CRYST1    0.000    0.000    0.000  90.00  90.00  90.00 P 1           1
ATOM      1  C5'     X   1      68.405  78.184  78.864  0.00  0.00           C
ATOM      2  C4'     X   1      69.216  79.192  78.074  0.00  0.00           C
ATOM      3  O4'     X   1      70.639  78.881  78.071  0.00  0.00           O
ATOM      4  C3'     X   1      68.863  79.314  76.592  0.00  0.00           C
ATOM      5  C2'     X   1      69.941  78.507  75.869  0.00  0.00           C
ATOM      6  C1'     X   1      71.111  78.960  76.735  0.00  0.00           C
ATOM      7  COM     X   1      82.870  72.053  79.068  0.00  0.00           C
END"""))'''
    
